<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" width="100%" height="100%" verticalAlign="middle" horizontalAlign="center">
	
	<fx:Script>
		<![CDATA[
			import mx.core.UIComponent;
			
			public var position:String;
			private var video:Video;
			
			public function activateCamera():void
			{
				this.findCamera();
			}
			
			public function deactivateCamera():void
			{
				if (this.video != null)
				{
					this.video.attachCamera(null);
					this.videoDisplay.removeAllElements();
					this.video = null;
				}
			}
			
			private function findCamera():void
			{
				if (!Camera.isSupported)
				{
					return;
				}
				
				var cam:Camera = this.getCamera(this.position);
				
				cam.setMode(400, 300, 30, false);
				cam.setMotionLevel(0);
				this.video = new Video(this.videoDisplay.width, this.videoDisplay.height);
				var m:Matrix = new Matrix();
				m.rotate(Math.PI/2); // 90 degrees
				this.video.transform.matrix = m;
				this.video.attachCamera(cam);
				var uic:UIComponent = new UIComponent();
				uic.addChild(this.video);
				uic.x = ((videoDisplay.width/2) - (this.video.width/2)) + this.video.width;
				uic.y = ((videoDisplay.height/2) - (this.video.height/2)) - 50;
				this.videoDisplay.addElement(uic);
			}
			
			// Get the requested camera. If it cannot be found,
			// return the device's default camera.
			private function getCamera(position:String):Camera
			{
				for (var i:uint = 0; i < Camera.names.length; ++i)
				{
					var cam:Camera = Camera.getCamera(String(i));
					if (cam.position == position) return cam;
				}
				return Camera.getCamera();
			}
			
		]]>
	</fx:Script>
	
	<s:Group id="videoDisplay" width="320" height="240"/>
	
</s:VGroup>