<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:utils="utils.*"
		 skinClass="skins.CustomViewBackground"  creationComplete="view1_creationCompleteHandler(event)">
	
	
	<fx:Script>
		<![CDATA[
			import events.UserEvent;
			
			import model.DataModel;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			[Bindable]
			private var dataModel:DataModel=DataModel.getInstance();
			private var itemsToDelete:Array=new Array();
			[Bindable]
			private var userVideoList:ArrayCollection;
			private var videoNumb:int;
			
			protected function view1_creationCompleteHandler(event:FlexEvent):void
			{
				retrieveVideos();
				
			}
		
			
			private function retrieveVideos():void
			{
				//currentPageUserVideos=1;
				new UserEvent(UserEvent.RETRIEVE_USER_VIDEOS).dispatch();
			}
			
			protected function deleteSelectedVideos_clickHandler(event:MouseEvent):void
			{
				itemsToDelete=new Array();
				for (var i:int=0; i < userVideoList.length; i++)
				{
					if (userVideoList[i].itemSelected == true)
					{
						itemsToDelete.push(userVideoList[i]);
					}
				}
				if (itemsToDelete.length > 0)
					trace("bideorik ezzz");
				deleteSelectedVideosConfirmed();
					//CustomAlert.confirm(resourceManager.getString('myResources', 'CONFIRM_VIDEO_DELETE'), Alert.YES | Alert.NO, FlexGlobals.topLevelApplication.parent, deleteVideosConfirmation, Alert.NO);
			}
			
			private function deleteSelectedVideosConfirmed():void
			{
				new UserEvent(UserEvent.DELETE_SELECTED_VIDEOS, itemsToDelete).dispatch();
			}
			
			private function set userVideoListRetrieved(value:Boolean):void
			{
				var dataProvider:ArrayCollection=dataModel.userVideoList;
				
				userVideoList=dataProvider;
				
				//createPagination(userVideoTable, userVideoList, currentPageUserVideos, paginationUserVideos, navigateToUserVideoPage);
				
			}
			private function set selectedVideosDeleted(value:Boolean):void
			{
				if (dataModel.selectedVideosDeleted)
				{
					itemsToDelete=new Array();
					retrieveVideos();
					dataModel.selectedVideosDeleted=false;
				}
			}

			
			
			
			
		]]>
	</fx:Script>
	<s:VGroup height="100%" width="100%">
		<s:HGroup id="search" height="10%" width="100%" verticalAlign="top" >
			<utils:search width="100%" />
		</s:HGroup>
		<s:VGroup id="section_title"  width="100%"  horizontalAlign="center" paddingBottom="16" paddingTop="16">
			<s:Label text="My Videos"
					 styleName="sectionTitleLabel"
					 id="userProfileTitleLabel"/>
			<s:Line width="{userProfileTitleLabel.width}">
				<s:stroke>
					<s:SolidColorStroke weight="3"
										color="{userProfileTitleLabel.getStyle('color')}"/>
				</s:stroke>
			</s:Line>
			
		</s:VGroup>
		
		 <s:Group width="100%" height="60">
			 <s:Button id="deleteSelectedVideos" x="51" y="10" width="89" height="45" label="DELETE"
					   click="deleteSelectedVideos_clickHandler(event)" fontSize="14" chromeColor="#f2f0c0"/>
			 <s:VGroup x="163" y="10" height="45">
			 <s:Line width="100%" height="100%">
				 <s:stroke>
				 <s:SolidColorStroke id="lineStroke"
									 color="black"
									 weight="3"
									 alpha="0.4" />
				 </s:stroke>
			 </s:Line>
			 </s:VGroup>
			 <s:Label id="videoCount" x="176" y="22" width="139" height="24" paddingLeft="16"
					  paddingRight="16" text="{dataModel.userVideoList.length} Videos"/>
		 </s:Group>
			<s:List width="100%" height="100%"
					skinClass="skins.TransparentBgListSkin"
					dataProvider="{userVideoList}"
					itemRenderer="utils.UserVideoItemRenderer">
		<s:layout>
			<s:VerticalLayout/>
		</s:layout>
				</s:List>
		</s:VGroup>
	
	<fx:Binding source="{dataModel.userVideoListRetrieved}"
				destination="userVideoListRetrieved"/>
	
	<fx:Binding source="{dataModel.selectedVideosDeleted}"
				destination="selectedVideosDeleted"/>
		
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>

</s:View>
